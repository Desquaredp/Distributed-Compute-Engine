// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: controller_storage.proto

package controller_storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControllerMessage_StatusCode int32

const (
	ControllerMessage_OK           ControllerMessage_StatusCode = 0
	ControllerMessage_ERROR        ControllerMessage_StatusCode = 1
	ControllerMessage_UNKNOWN_NODE ControllerMessage_StatusCode = 2
)

// Enum value maps for ControllerMessage_StatusCode.
var (
	ControllerMessage_StatusCode_name = map[int32]string{
		0: "OK",
		1: "ERROR",
		2: "UNKNOWN_NODE",
	}
	ControllerMessage_StatusCode_value = map[string]int32{
		"OK":           0,
		"ERROR":        1,
		"UNKNOWN_NODE": 2,
	}
)

func (x ControllerMessage_StatusCode) Enum() *ControllerMessage_StatusCode {
	p := new(ControllerMessage_StatusCode)
	*p = x
	return p
}

func (x ControllerMessage_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControllerMessage_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_controller_storage_proto_enumTypes[0].Descriptor()
}

func (ControllerMessage_StatusCode) Type() protoreflect.EnumType {
	return &file_controller_storage_proto_enumTypes[0]
}

func (x ControllerMessage_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControllerMessage_StatusCode.Descriptor instead.
func (ControllerMessage_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{0, 0}
}

type StorageNodeMessage_NodeStatus int32

const (
	StorageNodeMessage_NEW    StorageNodeMessage_NodeStatus = 0
	StorageNodeMessage_ACTIVE StorageNodeMessage_NodeStatus = 1
)

// Enum value maps for StorageNodeMessage_NodeStatus.
var (
	StorageNodeMessage_NodeStatus_name = map[int32]string{
		0: "NEW",
		1: "ACTIVE",
	}
	StorageNodeMessage_NodeStatus_value = map[string]int32{
		"NEW":    0,
		"ACTIVE": 1,
	}
)

func (x StorageNodeMessage_NodeStatus) Enum() *StorageNodeMessage_NodeStatus {
	p := new(StorageNodeMessage_NodeStatus)
	*p = x
	return p
}

func (x StorageNodeMessage_NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageNodeMessage_NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_controller_storage_proto_enumTypes[1].Descriptor()
}

func (StorageNodeMessage_NodeStatus) Type() protoreflect.EnumType {
	return &file_controller_storage_proto_enumTypes[1]
}

func (x StorageNodeMessage_NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageNodeMessage_NodeStatus.Descriptor instead.
func (StorageNodeMessage_NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{1, 0}
}

type ControllerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ControllerMessage:
	//
	//	*ControllerMessage_AcceptNewNode_
	//	*ControllerMessage_MissedHeartbeats_
	//	*ControllerMessage_FileCorruptionResponse_
	//	*ControllerMessage_ReplicationRequest_
	ControllerMessage isControllerMessage_ControllerMessage `protobuf_oneof:"controller_message"`
}

func (x *ControllerMessage) Reset() {
	*x = ControllerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage) ProtoMessage() {}

func (x *ControllerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage.ProtoReflect.Descriptor instead.
func (*ControllerMessage) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{0}
}

func (m *ControllerMessage) GetControllerMessage() isControllerMessage_ControllerMessage {
	if m != nil {
		return m.ControllerMessage
	}
	return nil
}

func (x *ControllerMessage) GetAcceptNewNode() *ControllerMessage_AcceptNewNode {
	if x, ok := x.GetControllerMessage().(*ControllerMessage_AcceptNewNode_); ok {
		return x.AcceptNewNode
	}
	return nil
}

func (x *ControllerMessage) GetMissedHeartbeats() *ControllerMessage_MissedHeartbeats {
	if x, ok := x.GetControllerMessage().(*ControllerMessage_MissedHeartbeats_); ok {
		return x.MissedHeartbeats
	}
	return nil
}

func (x *ControllerMessage) GetFileCorruptionResponse() *ControllerMessage_FileCorruptionResponse {
	if x, ok := x.GetControllerMessage().(*ControllerMessage_FileCorruptionResponse_); ok {
		return x.FileCorruptionResponse
	}
	return nil
}

func (x *ControllerMessage) GetReplicationRequest() *ControllerMessage_ReplicationRequest {
	if x, ok := x.GetControllerMessage().(*ControllerMessage_ReplicationRequest_); ok {
		return x.ReplicationRequest
	}
	return nil
}

type isControllerMessage_ControllerMessage interface {
	isControllerMessage_ControllerMessage()
}

type ControllerMessage_AcceptNewNode_ struct {
	AcceptNewNode *ControllerMessage_AcceptNewNode `protobuf:"bytes,1,opt,name=accept_new_node,json=acceptNewNode,proto3,oneof"`
}

type ControllerMessage_MissedHeartbeats_ struct {
	MissedHeartbeats *ControllerMessage_MissedHeartbeats `protobuf:"bytes,2,opt,name=missed_heartbeats,json=missedHeartbeats,proto3,oneof"`
}

type ControllerMessage_FileCorruptionResponse_ struct {
	FileCorruptionResponse *ControllerMessage_FileCorruptionResponse `protobuf:"bytes,3,opt,name=file_corruption_response,json=fileCorruptionResponse,proto3,oneof"`
}

type ControllerMessage_ReplicationRequest_ struct {
	ReplicationRequest *ControllerMessage_ReplicationRequest `protobuf:"bytes,4,opt,name=replication_request,json=replicationRequest,proto3,oneof"`
}

func (*ControllerMessage_AcceptNewNode_) isControllerMessage_ControllerMessage() {}

func (*ControllerMessage_MissedHeartbeats_) isControllerMessage_ControllerMessage() {}

func (*ControllerMessage_FileCorruptionResponse_) isControllerMessage_ControllerMessage() {}

func (*ControllerMessage_ReplicationRequest_) isControllerMessage_ControllerMessage() {}

type StorageNodeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to StorageNodeMessage:
	//
	//	*StorageNodeMessage_Intro_
	//	*StorageNodeMessage_Heartbeat_
	//	*StorageNodeMessage_FileCorruption_
	StorageNodeMessage isStorageNodeMessage_StorageNodeMessage `protobuf_oneof:"storage_node_message"`
}

func (x *StorageNodeMessage) Reset() {
	*x = StorageNodeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageNodeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageNodeMessage) ProtoMessage() {}

func (x *StorageNodeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageNodeMessage.ProtoReflect.Descriptor instead.
func (*StorageNodeMessage) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{1}
}

func (m *StorageNodeMessage) GetStorageNodeMessage() isStorageNodeMessage_StorageNodeMessage {
	if m != nil {
		return m.StorageNodeMessage
	}
	return nil
}

func (x *StorageNodeMessage) GetIntro() *StorageNodeMessage_Intro {
	if x, ok := x.GetStorageNodeMessage().(*StorageNodeMessage_Intro_); ok {
		return x.Intro
	}
	return nil
}

func (x *StorageNodeMessage) GetHeartbeat() *StorageNodeMessage_Heartbeat {
	if x, ok := x.GetStorageNodeMessage().(*StorageNodeMessage_Heartbeat_); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *StorageNodeMessage) GetFileCorruption() *StorageNodeMessage_FileCorruption {
	if x, ok := x.GetStorageNodeMessage().(*StorageNodeMessage_FileCorruption_); ok {
		return x.FileCorruption
	}
	return nil
}

type isStorageNodeMessage_StorageNodeMessage interface {
	isStorageNodeMessage_StorageNodeMessage()
}

type StorageNodeMessage_Intro_ struct {
	Intro *StorageNodeMessage_Intro `protobuf:"bytes,1,opt,name=intro,proto3,oneof"`
}

type StorageNodeMessage_Heartbeat_ struct {
	Heartbeat *StorageNodeMessage_Heartbeat `protobuf:"bytes,2,opt,name=heartbeat,proto3,oneof"`
}

type StorageNodeMessage_FileCorruption_ struct {
	FileCorruption *StorageNodeMessage_FileCorruption `protobuf:"bytes,3,opt,name=file_corruption,json=fileCorruption,proto3,oneof"`
}

func (*StorageNodeMessage_Intro_) isStorageNodeMessage_StorageNodeMessage() {}

func (*StorageNodeMessage_Heartbeat_) isStorageNodeMessage_StorageNodeMessage() {}

func (*StorageNodeMessage_FileCorruption_) isStorageNodeMessage_StorageNodeMessage() {}

type ControllerMessage_AcceptNewNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode                ControllerMessage_StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=main.ControllerMessage_StatusCode" json:"status_code,omitempty"`
	ExpectedHeartbeatInterval int32                        `protobuf:"varint,2,opt,name=expected_heartbeat_interval,json=expectedHeartbeatInterval,proto3" json:"expected_heartbeat_interval,omitempty"`
}

func (x *ControllerMessage_AcceptNewNode) Reset() {
	*x = ControllerMessage_AcceptNewNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage_AcceptNewNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage_AcceptNewNode) ProtoMessage() {}

func (x *ControllerMessage_AcceptNewNode) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage_AcceptNewNode.ProtoReflect.Descriptor instead.
func (*ControllerMessage_AcceptNewNode) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ControllerMessage_AcceptNewNode) GetStatusCode() ControllerMessage_StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return ControllerMessage_OK
}

func (x *ControllerMessage_AcceptNewNode) GetExpectedHeartbeatInterval() int32 {
	if x != nil {
		return x.ExpectedHeartbeatInterval
	}
	return 0
}

type ControllerMessage_MissedHeartbeats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode ControllerMessage_StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=main.ControllerMessage_StatusCode" json:"status_code,omitempty"`
	NodeId     string                       `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CanReinit  bool                         `protobuf:"varint,3,opt,name=can_reinit,json=canReinit,proto3" json:"can_reinit,omitempty"`
}

func (x *ControllerMessage_MissedHeartbeats) Reset() {
	*x = ControllerMessage_MissedHeartbeats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage_MissedHeartbeats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage_MissedHeartbeats) ProtoMessage() {}

func (x *ControllerMessage_MissedHeartbeats) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage_MissedHeartbeats.ProtoReflect.Descriptor instead.
func (*ControllerMessage_MissedHeartbeats) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ControllerMessage_MissedHeartbeats) GetStatusCode() ControllerMessage_StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return ControllerMessage_OK
}

func (x *ControllerMessage_MissedHeartbeats) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ControllerMessage_MissedHeartbeats) GetCanReinit() bool {
	if x != nil {
		return x.CanReinit
	}
	return false
}

type ControllerMessage_StorageNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageNodeId string `protobuf:"bytes,1,opt,name=storage_node_id,json=storageNodeId,proto3" json:"storage_node_id,omitempty"`
	Host          string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port          string `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ControllerMessage_StorageNodeInfo) Reset() {
	*x = ControllerMessage_StorageNodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage_StorageNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage_StorageNodeInfo) ProtoMessage() {}

func (x *ControllerMessage_StorageNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage_StorageNodeInfo.ProtoReflect.Descriptor instead.
func (*ControllerMessage_StorageNodeInfo) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ControllerMessage_StorageNodeInfo) GetStorageNodeId() string {
	if x != nil {
		return x.StorageNodeId
	}
	return ""
}

func (x *ControllerMessage_StorageNodeInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ControllerMessage_StorageNodeInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type ControllerMessage_FileCorruptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode   ControllerMessage_StatusCode         `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=main.ControllerMessage_StatusCode" json:"status_code,omitempty"`
	StorageNodes []*ControllerMessage_StorageNodeInfo `protobuf:"bytes,2,rep,name=storage_nodes,json=storageNodes,proto3" json:"storage_nodes,omitempty"`
	FileName     string                               `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *ControllerMessage_FileCorruptionResponse) Reset() {
	*x = ControllerMessage_FileCorruptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage_FileCorruptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage_FileCorruptionResponse) ProtoMessage() {}

func (x *ControllerMessage_FileCorruptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage_FileCorruptionResponse.ProtoReflect.Descriptor instead.
func (*ControllerMessage_FileCorruptionResponse) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ControllerMessage_FileCorruptionResponse) GetStatusCode() ControllerMessage_StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return ControllerMessage_OK
}

func (x *ControllerMessage_FileCorruptionResponse) GetStorageNodes() []*ControllerMessage_StorageNodeInfo {
	if x != nil {
		return x.StorageNodes
	}
	return nil
}

func (x *ControllerMessage_FileCorruptionResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type ControllerMessage_ReplicationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName     string                               `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	StorageNodes []*ControllerMessage_StorageNodeInfo `protobuf:"bytes,2,rep,name=storage_nodes,json=storageNodes,proto3" json:"storage_nodes,omitempty"`
}

func (x *ControllerMessage_ReplicationInfo) Reset() {
	*x = ControllerMessage_ReplicationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage_ReplicationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage_ReplicationInfo) ProtoMessage() {}

func (x *ControllerMessage_ReplicationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage_ReplicationInfo.ProtoReflect.Descriptor instead.
func (*ControllerMessage_ReplicationInfo) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ControllerMessage_ReplicationInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ControllerMessage_ReplicationInfo) GetStorageNodes() []*ControllerMessage_StorageNodeInfo {
	if x != nil {
		return x.StorageNodes
	}
	return nil
}

type ControllerMessage_ReplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode      ControllerMessage_StatusCode         `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=main.ControllerMessage_StatusCode" json:"status_code,omitempty"`
	ReplicationInfo []*ControllerMessage_ReplicationInfo `protobuf:"bytes,2,rep,name=replication_info,json=replicationInfo,proto3" json:"replication_info,omitempty"`
}

func (x *ControllerMessage_ReplicationRequest) Reset() {
	*x = ControllerMessage_ReplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage_ReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage_ReplicationRequest) ProtoMessage() {}

func (x *ControllerMessage_ReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage_ReplicationRequest.ProtoReflect.Descriptor instead.
func (*ControllerMessage_ReplicationRequest) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ControllerMessage_ReplicationRequest) GetStatusCode() ControllerMessage_StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return ControllerMessage_OK
}

func (x *ControllerMessage_ReplicationRequest) GetReplicationInfo() []*ControllerMessage_ReplicationInfo {
	if x != nil {
		return x.ReplicationInfo
	}
	return nil
}

type StorageNodeMessage_Intro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     string                        `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeStatus StorageNodeMessage_NodeStatus `protobuf:"varint,2,opt,name=node_status,json=nodeStatus,proto3,enum=main.StorageNodeMessage_NodeStatus" json:"node_status,omitempty"`
	OpenPort   string                        `protobuf:"bytes,3,opt,name=openPort,proto3" json:"openPort,omitempty"`
	Host       string                        `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *StorageNodeMessage_Intro) Reset() {
	*x = StorageNodeMessage_Intro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageNodeMessage_Intro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageNodeMessage_Intro) ProtoMessage() {}

func (x *StorageNodeMessage_Intro) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageNodeMessage_Intro.ProtoReflect.Descriptor instead.
func (*StorageNodeMessage_Intro) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StorageNodeMessage_Intro) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StorageNodeMessage_Intro) GetNodeStatus() StorageNodeMessage_NodeStatus {
	if x != nil {
		return x.NodeStatus
	}
	return StorageNodeMessage_NEW
}

func (x *StorageNodeMessage_Intro) GetOpenPort() string {
	if x != nil {
		return x.OpenPort
	}
	return ""
}

func (x *StorageNodeMessage_Intro) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type StorageNodeMessage_Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId               string                        `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeStatus           StorageNodeMessage_NodeStatus `protobuf:"varint,2,opt,name=node_status,json=nodeStatus,proto3,enum=main.StorageNodeMessage_NodeStatus" json:"node_status,omitempty"`
	FreeSpace            int64                         `protobuf:"varint,3,opt,name=free_space,json=freeSpace,proto3" json:"free_space,omitempty"`
	NumRequestsProcessed int32                         `protobuf:"varint,4,opt,name=num_requests_processed,json=numRequestsProcessed,proto3" json:"num_requests_processed,omitempty"`
	NewFiles             []string                      `protobuf:"bytes,5,rep,name=new_files,json=newFiles,proto3" json:"new_files,omitempty"`
	AllFiles             []string                      `protobuf:"bytes,6,rep,name=all_files,json=allFiles,proto3" json:"all_files,omitempty"`
}

func (x *StorageNodeMessage_Heartbeat) Reset() {
	*x = StorageNodeMessage_Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageNodeMessage_Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageNodeMessage_Heartbeat) ProtoMessage() {}

func (x *StorageNodeMessage_Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageNodeMessage_Heartbeat.ProtoReflect.Descriptor instead.
func (*StorageNodeMessage_Heartbeat) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{1, 1}
}

func (x *StorageNodeMessage_Heartbeat) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StorageNodeMessage_Heartbeat) GetNodeStatus() StorageNodeMessage_NodeStatus {
	if x != nil {
		return x.NodeStatus
	}
	return StorageNodeMessage_NEW
}

func (x *StorageNodeMessage_Heartbeat) GetFreeSpace() int64 {
	if x != nil {
		return x.FreeSpace
	}
	return 0
}

func (x *StorageNodeMessage_Heartbeat) GetNumRequestsProcessed() int32 {
	if x != nil {
		return x.NumRequestsProcessed
	}
	return 0
}

func (x *StorageNodeMessage_Heartbeat) GetNewFiles() []string {
	if x != nil {
		return x.NewFiles
	}
	return nil
}

func (x *StorageNodeMessage_Heartbeat) GetAllFiles() []string {
	if x != nil {
		return x.AllFiles
	}
	return nil
}

type StorageNodeMessage_FileCorruption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *StorageNodeMessage_FileCorruption) Reset() {
	*x = StorageNodeMessage_FileCorruption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageNodeMessage_FileCorruption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageNodeMessage_FileCorruption) ProtoMessage() {}

func (x *StorageNodeMessage_FileCorruption) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageNodeMessage_FileCorruption.ProtoReflect.Descriptor instead.
func (*StorageNodeMessage_FileCorruption) Descriptor() ([]byte, []int) {
	return file_controller_storage_proto_rawDescGZIP(), []int{1, 2}
}

func (x *StorageNodeMessage_FileCorruption) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StorageNodeMessage_FileCorruption) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

var File_controller_storage_proto protoreflect.FileDescriptor

var file_controller_storage_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e,
	0x22, 0xd6, 0x0a, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4e,
	0x65, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x65,
	0x64, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x65, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x73, 0x48, 0x00, 0x52, 0x10,
	0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x73,
	0x12, 0x6a, 0x0a, 0x18, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x75, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x13,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x94, 0x01, 0x0a, 0x0d,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x3e, 0x0a, 0x1b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x1a, 0x8f, 0x01, 0x0a, 0x10, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x69,
	0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x52, 0x65,
	0x69, 0x6e, 0x69, 0x74, 0x1a, 0x61, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0xc8, 0x01, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x7c, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x1a, 0xad, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x52, 0x0a, 0x10,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x31, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4e, 0x4f, 0x44,
	0x45, 0x10, 0x02, 0x42, 0x14, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xfc, 0x05, 0x0a, 0x12, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x36, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x48,
	0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x42, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x48,
	0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x52, 0x0a, 0x0f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x96, 0x01, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65,
	0x6e, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x1a, 0xf9, 0x01, 0x0a, 0x09, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x65, 0x77, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x46, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x72,
	0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a,
	0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x45, 0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01,
	0x42, 0x16, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x2e, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_controller_storage_proto_rawDescOnce sync.Once
	file_controller_storage_proto_rawDescData = file_controller_storage_proto_rawDesc
)

func file_controller_storage_proto_rawDescGZIP() []byte {
	file_controller_storage_proto_rawDescOnce.Do(func() {
		file_controller_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_controller_storage_proto_rawDescData)
	})
	return file_controller_storage_proto_rawDescData
}

var file_controller_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_controller_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_controller_storage_proto_goTypes = []interface{}{
	(ControllerMessage_StatusCode)(0),                // 0: main.ControllerMessage.StatusCode
	(StorageNodeMessage_NodeStatus)(0),               // 1: main.StorageNodeMessage.NodeStatus
	(*ControllerMessage)(nil),                        // 2: main.ControllerMessage
	(*StorageNodeMessage)(nil),                       // 3: main.StorageNodeMessage
	(*ControllerMessage_AcceptNewNode)(nil),          // 4: main.ControllerMessage.AcceptNewNode
	(*ControllerMessage_MissedHeartbeats)(nil),       // 5: main.ControllerMessage.MissedHeartbeats
	(*ControllerMessage_StorageNodeInfo)(nil),        // 6: main.ControllerMessage.StorageNodeInfo
	(*ControllerMessage_FileCorruptionResponse)(nil), // 7: main.ControllerMessage.FileCorruptionResponse
	(*ControllerMessage_ReplicationInfo)(nil),        // 8: main.ControllerMessage.ReplicationInfo
	(*ControllerMessage_ReplicationRequest)(nil),     // 9: main.ControllerMessage.ReplicationRequest
	(*StorageNodeMessage_Intro)(nil),                 // 10: main.StorageNodeMessage.Intro
	(*StorageNodeMessage_Heartbeat)(nil),             // 11: main.StorageNodeMessage.Heartbeat
	(*StorageNodeMessage_FileCorruption)(nil),        // 12: main.StorageNodeMessage.FileCorruption
}
var file_controller_storage_proto_depIdxs = []int32{
	4,  // 0: main.ControllerMessage.accept_new_node:type_name -> main.ControllerMessage.AcceptNewNode
	5,  // 1: main.ControllerMessage.missed_heartbeats:type_name -> main.ControllerMessage.MissedHeartbeats
	7,  // 2: main.ControllerMessage.file_corruption_response:type_name -> main.ControllerMessage.FileCorruptionResponse
	9,  // 3: main.ControllerMessage.replication_request:type_name -> main.ControllerMessage.ReplicationRequest
	10, // 4: main.StorageNodeMessage.intro:type_name -> main.StorageNodeMessage.Intro
	11, // 5: main.StorageNodeMessage.heartbeat:type_name -> main.StorageNodeMessage.Heartbeat
	12, // 6: main.StorageNodeMessage.file_corruption:type_name -> main.StorageNodeMessage.FileCorruption
	0,  // 7: main.ControllerMessage.AcceptNewNode.status_code:type_name -> main.ControllerMessage.StatusCode
	0,  // 8: main.ControllerMessage.MissedHeartbeats.status_code:type_name -> main.ControllerMessage.StatusCode
	0,  // 9: main.ControllerMessage.FileCorruptionResponse.status_code:type_name -> main.ControllerMessage.StatusCode
	6,  // 10: main.ControllerMessage.FileCorruptionResponse.storage_nodes:type_name -> main.ControllerMessage.StorageNodeInfo
	6,  // 11: main.ControllerMessage.ReplicationInfo.storage_nodes:type_name -> main.ControllerMessage.StorageNodeInfo
	0,  // 12: main.ControllerMessage.ReplicationRequest.status_code:type_name -> main.ControllerMessage.StatusCode
	8,  // 13: main.ControllerMessage.ReplicationRequest.replication_info:type_name -> main.ControllerMessage.ReplicationInfo
	1,  // 14: main.StorageNodeMessage.Intro.node_status:type_name -> main.StorageNodeMessage.NodeStatus
	1,  // 15: main.StorageNodeMessage.Heartbeat.node_status:type_name -> main.StorageNodeMessage.NodeStatus
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_controller_storage_proto_init() }
func file_controller_storage_proto_init() {
	if File_controller_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_controller_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageNodeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerMessage_AcceptNewNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerMessage_MissedHeartbeats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerMessage_StorageNodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerMessage_FileCorruptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerMessage_ReplicationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerMessage_ReplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageNodeMessage_Intro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageNodeMessage_Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageNodeMessage_FileCorruption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_controller_storage_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ControllerMessage_AcceptNewNode_)(nil),
		(*ControllerMessage_MissedHeartbeats_)(nil),
		(*ControllerMessage_FileCorruptionResponse_)(nil),
		(*ControllerMessage_ReplicationRequest_)(nil),
	}
	file_controller_storage_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*StorageNodeMessage_Intro_)(nil),
		(*StorageNodeMessage_Heartbeat_)(nil),
		(*StorageNodeMessage_FileCorruption_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_controller_storage_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_controller_storage_proto_goTypes,
		DependencyIndexes: file_controller_storage_proto_depIdxs,
		EnumInfos:         file_controller_storage_proto_enumTypes,
		MessageInfos:      file_controller_storage_proto_msgTypes,
	}.Build()
	File_controller_storage_proto = out.File
	file_controller_storage_proto_rawDesc = nil
	file_controller_storage_proto_goTypes = nil
	file_controller_storage_proto_depIdxs = nil
}
